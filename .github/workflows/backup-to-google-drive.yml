name: Backup GitHub Repo to Google Drive

on:
  push:
    branches:
      - main  # Trigger when there's a push to the 'main' branch

jobs:
  backup:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repo
        uses: actions/checkout@v2  # This checks out the repository's code

      # Step 2: Install Python dependencies required for Google Drive API
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install google-api-python-client google-auth-httplib2 google-auth-oauthlib

      # Step 3: Zip the repository into a file (repo.zip)
      - name: Zip the repository
        run: zip -r repo.zip .

      # Step 4: (Optional) Debug the environment variables
      - name: Debug Environment Variables
        run: |
          echo "GOOGLE_DRIVE_CLIENT_ID=${{ secrets.GOOGLE_DRIVE_CLIENT_ID }}"
          echo "GOOGLE_DRIVE_CLIENT_SECRET=${{ secrets.GOOGLE_DRIVE_CLIENT_SECRET }}"
          echo "GOOGLE_DRIVE_REFRESH_TOKEN=${{ secrets.GOOGLE_DRIVE_REFRESH_TOKEN }}"

      # Step 5: Authenticate with Google Drive API and upload the repo.zip file
      - name: Authenticate with Google Drive API and upload
        env:
          GOOGLE_DRIVE_CLIENT_ID: ${{ secrets.GOOGLE_DRIVE_CLIENT_ID }}
          GOOGLE_DRIVE_CLIENT_SECRET: ${{ secrets.GOOGLE_DRIVE_CLIENT_SECRET }}
          GOOGLE_DRIVE_REFRESH_TOKEN: ${{ secrets.GOOGLE_DRIVE_REFRESH_TOKEN }}
        run: |
          python -c "
          from google.oauth2.credentials import Credentials
          from googleapiclient.discovery import build
          from googleapiclient.http import MediaFileUpload
          import os

          creds_info = {
              'client_id': os.getenv('GOOGLE_DRIVE_CLIENT_ID'),
              'client_secret': os.getenv('GOOGLE_DRIVE_CLIENT_SECRET'),
              'refresh_token': os.getenv('GOOGLE_DRIVE_REFRESH_TOKEN')
          }

          creds = Credentials.from_authorized_user_info(info=creds_info)

          service = build('drive', 'v3', credentials=creds)

          file_metadata = {'name': 'backup_repo.zip'}
          media = MediaFileUpload('repo.zip', mimetype='application/zip')

          file = service.files().create(body=file_metadata, media_body=media, fields='id').execute()
          print(f'Uploaded file ID: {file["id"]}')
          "
